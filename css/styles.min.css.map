{"version":3,"sources":["<no source>","libs/_fonts.scss","base/_base.scss","base/_grid.scss","header/_navigation.scss","breakpoint/_breakpoint.scss","compass-sass-mixins/compass/css3/_shared.sass","libs/_mixins.scss","header/_head.scss"],"names":[],"mappings":"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","file":"styles.min.css","sourcesContent":[null,"@import url('https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i,800,800i');\r\n$RobotoLight: 'Roboto Light';\r\n$RobotoRegular: 'Roboto Regular';\r\n$RobotoMedium: 'Roboto Medium';\r\n$RobotoBold: 'Roboto Bold';\r\n$Boomboom: 'Boomboom';\r\n@font-face {\r\n  font-family: 'Roboto Light';\r\n  src: url('../fonts/Roboto/RobotoLight.eot') format('embedded-opentype'),\r\n  url('../fonts/Roboto/RobotoLight.woff2') format('woff2'),\r\n  url('../fonts/Roboto/RobotoLight.woff') format('woff'),\r\n  url('../fonts/Roboto/RobotoLight.ttf') format('truetype'),\r\n  url('../fonts/Roboto/RobotoLight.svg') format('svg');\r\n}\r\n@font-face {\r\n  font-family: 'Roboto Regular';\r\n  src: url('../fonts/Roboto/RobotoRegular.eot') format('embedded-opentype'),\r\n  url('../fonts/Roboto/RobotoRegular.woff2') format('woff2'),\r\n  url('../fonts/Roboto/RobotoRegular.woff') format('woff'),\r\n  url('../fonts/Roboto/RobotoRegular.ttf') format('truetype'),\r\n  url('../fonts/Roboto/RobotoRegular.svg') format('svg');\r\n}\r\n@font-face {\r\n  font-family: 'Roboto Medium';\r\n  src: url('../fonts/Roboto/RobotoMedium.eot') format('embedded-opentype'),\r\n  url('../fonts/Roboto/RobotoMedium.woff2') format('woff2'),\r\n  url('../fonts/Roboto/RobotoMedium.woff') format('woff'),\r\n  url('../fonts/Roboto/RobotoMedium.ttf') format('truetype'),\r\n  url('../fonts/Roboto/RobotoMedium.svg') format('svg');\r\n}\r\n@font-face {\r\n  font-family: 'Roboto Bold';\r\n  src: url('../fonts/Roboto/RobotoBold.eot') format('embedded-opentype'),\r\n  url('../fonts/Roboto/RobotoBold.woff2') format('woff2'),\r\n  url('../fonts/Roboto/RobotoBold.woff') format('woff'),\r\n  url('../fonts/Roboto/RobotoBold.ttf') format('truetype'),\r\n  url('../fonts/Roboto/RobotoBold.svg') format('svg');\r\n}\r\n@font-face {\r\n  font-family: 'Boomboom';\r\n  src: url('../fonts/Boomboom/boomboom.eot') format('embedded-opentype'),\r\n  url('../fonts/Boomboom/boomboom.woff2') format('woff2'),\r\n  url('../fonts/Boomboom/boomboom.woff') format('woff'),\r\n  url('../fonts/Boomboom/boomboom.ttf') format('truetype'),\r\n  url('../fonts/Boomboom/boomboom.svg') format('svg');\r\n}","html{\r\n    width: 100%;\r\n}\r\nbody{\r\n    width: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n    font-weight: inherit;\r\n    font-style: inherit;\r\n    text-align: left;\r\n    vertical-align: baseline;\r\n    font-family: 'Open Sans', sans-serif;\r\n}\r\n\r\na {\r\n    text-decoration: none;\r\n    &:hover, &:focus, &:active{\r\n        text-decoration: none;\r\n    }\r\n}\r\n\r\ninput{\r\n    outline: none;\r\n    &:hover, &:focus, &:active{\r\n        outline: none;\r\n    }\r\n}\r\n\r\ntextarea{\r\n    outline: none;\r\n    &:hover, &:focus, &:active{\r\n        outline: none;\r\n    }\r\n}\r\n\r\nsection{\r\n    display: block;\r\n    position: relative;\r\n    float: left;\r\n    width: 100%;\r\n}\r\n\r\n%clearfix {\r\n    *zoom: 1;\r\n    &:after {\r\n        content: '';\r\n        display: table;\r\n        line-height: 0;\r\n        clear: both;\r\n    }\r\n}\r\n",".container {\r\n    box-sizing: border-box;\r\n    padding-right: 10px;\r\n    padding-left: 10px;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n    position: relative;\r\n}\r\n\r\n.container {\r\n    @extend %clearfix;\r\n}\r\n@media (min-width: 768px) {\r\n    .container {\r\n        width: 766px;\r\n    }\r\n}\r\n@media (min-width: 992px) {\r\n    .container {\r\n        width: 990px;\r\n    }\r\n}\r\n\r\n@media (min-width: 1200px) {\r\n    .container {\r\n        width: 1170px;\r\n    }\r\n}\r\n",".header__navigation{\r\n  display: block;\r\n  position: relative;\r\n  float: right;\r\n  width: 740px;\r\n}\r\n.header__trigger{\r\n  display: none;\r\n  position: relative;\r\n  float: left;\r\n  width: 100px;\r\n  height: 100px;\r\n  > span{\r\n    display: block;\r\n    position: relative;\r\n    float: left;\r\n    width: 100%;\r\n    height: 2px;\r\n    background-color: #fff;\r\n    margin: 5px 0;\r\n  }\r\n  @include breakpoint(max-width 600px){\r\n    display: block;\r\n  }\r\n}\r\n.header__nav{\r\n  @include display-flex(flex);\r\n  @include flex-wrap(wrap);\r\n  @include flex-direction(row);\r\n  position: relative;\r\n  float: left;\r\n  width: 100%;\r\n  padding: 0;\r\n  margin-top: 35px;\r\n  margin-bottom: 0;\r\n  list-style: none;\r\n  > li{\r\n    flex: 1 0 0;\r\n    position: relative;\r\n    float: left;\r\n    > a{\r\n      display: block;\r\n      position: relative;\r\n      float: left;\r\n      width: 100%;\r\n      text-align: center;\r\n      color: #f2f2f2;\r\n      font-size: 15px;\r\n      font-weight: 600;\r\n      text-transform: uppercase;\r\n      padding: 17px 0;\r\n      @include box-sizing(border-box);\r\n      &:after{\r\n        display: block;\r\n        position: absolute;\r\n        content: '';\r\n        top: 50px;\r\n        margin-left: calc(50% - (50px/2));\r\n        width: 0;\r\n        height: 2px;\r\n        background-color: #f2f2f2;\r\n        @include transition(0.4s);\r\n      }\r\n    }\r\n    > a:hover{\r\n      color: #f2f2f2;\r\n      &:after{\r\n        width: 50px;\r\n        @include transition(0.4s);\r\n      }\r\n    }\r\n  }\r\n}","//////////////////////////////\r\n// Default Variables\r\n//////////////////////////////\r\n$Breakpoint-Settings: (\r\n  'default media': all,\r\n  'default feature': min-width,\r\n  'default pair': width,\r\n\r\n  'force all media type': false,\r\n  'to ems': false,\r\n  'transform resolutions': true,\r\n\r\n  'no queries': false,\r\n  'no query fallbacks': false,\r\n\r\n  'base font size': 16px,\r\n\r\n  'legacy syntax': false\r\n);\r\n\r\n$breakpoint: () !default;\r\n\r\n//////////////////////////////\r\n// Imports\r\n//////////////////////////////\r\n@import \"breakpoint/settings\";\r\n@import 'breakpoint/context';\r\n@import 'breakpoint/helpers';\r\n@import 'breakpoint/parsers';\r\n@import 'breakpoint/no-query';\r\n\r\n@import 'breakpoint/respond-to';\r\n\r\n@import \"breakpoint/legacy-settings\";\r\n\r\n//////////////////////////////\r\n// Breakpoint Mixin\r\n//////////////////////////////\r\n\r\n@mixin breakpoint($query, $no-query: false) {\r\n  @include legacy-settings-warning;\r\n\r\n  // Reset contexts\r\n  @include private-breakpoint-reset-contexts();\r\n\r\n  $breakpoint: breakpoint($query, false);\r\n\r\n  $query-string: map-get($breakpoint, 'query');\r\n  $query-fallback: map-get($breakpoint, 'fallback');\r\n\r\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\r\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\r\n\r\n  // Allow for an as-needed override or usage of no query fallback.\r\n  @if $no-query != false {\r\n    $query-fallback: $no-query;\r\n  }\r\n\r\n  @if $query-fallback != false {\r\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\r\n  }\r\n\r\n  // Print Out Query String\r\n  @if not breakpoint-get('no queries') {\r\n    @media #{$query-string} {\r\n      @content;\r\n    }\r\n  }\r\n\r\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\r\n\r\n    $type: type-of(breakpoint-get('no query fallbacks'));\r\n    $print: false;\r\n\r\n    @if ($type == 'bool') {\r\n      $print: true;\r\n    }\r\n    @else if ($type == 'string') {\r\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\r\n        $print: true;\r\n      }\r\n    }\r\n    @else if ($type == 'list') {\r\n      @each $wrapper in breakpoint-get('no query fallbacks') {\r\n        @if $query-fallback == $wrapper {\r\n          $print: true;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Write Fallback\r\n    @if ($query-fallback != false) and ($print == true) {\r\n      $type-fallback: type-of($query-fallback);\r\n\r\n      @if ($type-fallback != 'bool') {\r\n        #{$query-fallback} & {\r\n          @content;\r\n        }\r\n      }\r\n      @else {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n\r\n  @include private-breakpoint-reset-contexts();\r\n}\r\n\r\n\r\n@mixin mq($query, $no-query: false) {\r\n  @include breakpoint($query, $no-query) {\r\n    @content;\r\n  }\r\n}\r\n","@import \"../support\";\n\n// This mixin provides basic support for CSS3 properties and\n// their corresponding experimental CSS2 properties when\n// the implementations are identical except for the property\n// prefix.\n@mixin experimental($property, $value, $moz: $experimental-support-for-mozilla, $webkit: $experimental-support-for-webkit, $o: $experimental-support-for-opera, $ms: $experimental-support-for-microsoft, $khtml: $experimental-support-for-khtml, $official: true) {\n  @if $webkit and $experimental-support-for-webkit {\n    -webkit-#{$property}: $value; }\n  @if $khtml and $experimental-support-for-khtml {\n    -khtml-#{$property}: $value; }\n  @if $moz and $experimental-support-for-mozilla {\n    -moz-#{$property}: $value; }\n  @if $ms and $experimental-support-for-microsoft {\n    -ms-#{$property}: $value; }\n  @if $o and $experimental-support-for-opera {\n    -o-#{$property}: $value; }\n  @if $official {\n    #{$property}: $value; } }\n\n// Same as experimental(), but for cases when the property is the same and the value is vendorized\n@mixin experimental-value($property, $value, $moz: $experimental-support-for-mozilla, $webkit: $experimental-support-for-webkit, $o: $experimental-support-for-opera, $ms: $experimental-support-for-microsoft, $khtml: $experimental-support-for-khtml, $official: true) {\n  @if $webkit and $experimental-support-for-webkit {\n    #{$property}: -webkit-#{$value}; }\n  @if $khtml and $experimental-support-for-khtml {\n    #{$property}: -khtml-#{$value}; }\n  @if $moz and $experimental-support-for-mozilla {\n    #{$property}: -moz-#{$value}; }\n  @if $ms and $experimental-support-for-microsoft {\n    #{$property}: -ms-#{$value}; }\n  @if $o and $experimental-support-for-opera {\n    #{$property}: -o-#{$value}; }\n  @if $official {\n    #{$property}: #{$value}; } }\n","@mixin transition($t) {\r\n\t-webkit-transition: all $t linear;\r\n\t   -moz-transition: all $t linear;\r\n\t    -ms-transition: all $t linear;\r\n\t     -o-transition: all $t linear;\r\n\t        transition: all $t linear;\r\n}\r\n\r\n@mixin overflow-img() {\r\n\toverflow: hidden;\r\n\timg {\r\n\t\tmin-width: 100%;\r\n\t\theight: auto;\r\n\t\tposition: relative;\r\n\t\tleft: 50%;\r\n\t\ttop: 50%;\r\n\t\t-webkit-transform: translate(-50%,-50%);\r\n\t\t   -moz-transform: translate(-50%,-50%);\r\n\t\t    -ms-transform: translate(-50%,-50%);\r\n\t\t     -o-transform: translate(-50%,-50%);\r\n\t\t        transform: translate(-50%,-50%);\r\n\t}\r\n}\r\n\r\n@mixin border-box{\r\n\tbox-sizing: border-box;\r\n\t-moz-box-sizing: border-box;\r\n\t-webkit-box-sizing: border-box;\r\n\t-ms-box-sizing: border-box;\r\n}\r\n\r\n@mixin vertical-align {\r\n\tposition: relative;\r\n\ttop: 50%;\r\n\t-webkit-transform: translateY(-50%);\r\n\t-ms-transform: translateY(-50%);\r\n\ttransform: translateY(-50%);\r\n}\r\n\r\n// Breakpoints for each query\r\n$smartphone: 480px;\r\n$tabletPortrait: 767px;\r\n$tabletLandscape: 1024px;\r\n$desktop: 1174px;\r\n$largeScreen: 1400px;\r\n\r\n@mixin respondTo($media) {\r\n\t@if $media == smartphone {\r\n\t  @media (min-width: $smartphone) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\t@else if $media == tablet {\r\n\t  @media (min-width: $tabletPortrait) and (max-width: $tabletLandscape) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\t@else if $media == smallScreen {\r\n\t  @media (min-width: $desktop) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\t@else if $media == desktop {\r\n\t  @media (min-width: $desktop) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n  @else if $media == largeScreen {\r\n    @media (min-width: $largeScreen) {\r\n\t\t\t@content;\r\n\t\t}\r\n  }\r\n}\r\n",".header{\r\n  background-color: #5e4238;\r\n  &__logo{\r\n    display: block;\r\n    position: relative;\r\n    float: left;\r\n    width: 193px;\r\n    margin-top: 27px;\r\n    margin-bottom: 23px;\r\n    font-family: $Boomboom;\r\n    > p:first-of-type{\r\n       display: block;\r\n       position: relative;\r\n       float: left;\r\n       width: 100%;\r\n       font-size: 55px;\r\n       color: #f2f2f2;\r\n      margin: 0;\r\n      span{\r\n        color: #42bf6e;\r\n      }\r\n     }\r\n    > p:last-of-type{\r\n      display: block;\r\n      position: relative;\r\n      float: left;\r\n      width: 100%;\r\n      font-size: 30px;\r\n      color: #f2f2f2;\r\n      text-align: center;\r\n      margin-top: -21px;\r\n      margin-bottom: 0;\r\n      padding-left: 13px;\r\n      @include box-sizing(border-box);\r\n      span{\r\n        color: #42bf6e;\r\n      }\r\n    }\r\n  }\r\n}"],"sourceRoot":"css-source"}